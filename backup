// LoudNoises.h
#ifndef LOUDNOISES_H
#define LOUDNOISES_H

#include <string>

std::string makeLoudNoises(int argc, char **argv);

#endif

// LoudNoises.cpp
#include "LoudNoises.h"
#include <iostream>
#include <cctype>

std::string makeLoudNoises(int argc, char **argv) {
    std::string result;

    if (argc > 1) {
        for (int i = 1; i < argc; ++i) {
            int j = 0;
            while (argv[i][j] != '\0') {
                if (std::islower(argv[i][j])) {
                    result += std::toupper(argv[i][j]);
                } else {
                    result += argv[i][j];
                }
                ++j;
            }
        }
    } else {
        result = "* LOUD AND UNBEARABLE FEEDBACK NOISE *";
    }

    return result;
}

// LoudNoisesTest.cpp
#include "gtest/gtest.h"
#include "LoudNoises.h"

TEST(LoudNoisesTest, SingleArgument) {
    char* args[] = {(char*)"program", (char*)"hello"};
    int argc = 2;
    std::string expected = "HELLO";
    std::string result = makeLoudNoises(argc, args);
    EXPECT_EQ(result, expected);
}

TEST(LoudNoisesTest, MultipleArguments) {
    char* args[] = {(char*)"program", (char*)"hello", (char*)"world"};
    int argc = 3;
    std::string expected = "HELLOWORLD";
    std::string result = makeLoudNoises(argc, args);
    EXPECT_EQ(result, expected);
}

TEST(LoudNoisesTest, NoArguments) {
    char* args[] = {(char*)"program"};
    int argc = 1;
    std::string expected = "* LOUD AND UNBEARABLE FEEDBACK NOISE *";
    std::string result = makeLoudNoises(argc, args);
    EXPECT_EQ(result, expected);
}

int main(int argc, char** argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
